defmodule Challenges.EvenFibs do
  @moduledoc """
  Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
  """

  def sum(max), do: iter_fibs(1,0,max)

  def fib(n), do: fib(0,1,n)
  def fib(x,_,0), do: x
  def fib(x,y,n) do
    fib(y, x+y, n-1)
  end

  def fibs(n) do
    Stream.map(0..n, &(fib &1))
    |> Enum.to_list()
  end

  defp iter_fibs(x, res, max) do
    fib_x = fib(x)
    condition = rem(fib_x,2) == 0
    case (fib_x < max) do
      true ->
        if (condition) do
          iter_fibs(x+1, res + fib(x), max)
        else
          iter_fibs(x+1, res, max)
        end
        _ -> res
    end
  end

end
